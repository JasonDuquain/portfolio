:root {
  box-sizing: border-box;
  scroll-behavior: smooth;
}

*, ::before, ::after {
  box-sizing: inherit;
  text-decoration: none;
  list-style-type: none;
  margin: 0;
  padding: 0;
}

body {
  font-size: 100%;
  font-family: sans-serif;
}

section {
  margin: 6em 0;
}

.wrap {
  position: absolute;
  top: 50px;
  left: 50%;
  transform: translateX(-50%);
}

.header {
  height: 100vh;
  background: url("../img/hero-bg.jpg") center/cover fixed no-repeat;
  color: #fff;
  position: relative;
  overflow: hidden;
}

.header__wrap {
  padding: 2rem;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 1;
}

.header__group {
  position: absolute;
  top: 50%;
  color: #fff;
  z-index: 2;
  width: 900px;
}

.header__overlay {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background: #333 center/cover fixed no-repeat;
  z-index: 0;
  filter: blur(4px);
  opacity: 0;
}

.header__para {
  font-size: 1.5em;
  text-transform: uppercase;
  margin-bottom: .5em;
  font-weight: 700;
}

.header__para-two {
  font-size: 1.8em;
  margin-bottom: .5em;
}

.header__heading {
  display: inline-block;
  font-weight: 300;
  margin-bottom: .5em;
}

.header__heading--two {
  font-family: 'Audiowide', cursive;
  margin: 0 0 0 -.75em;
  display: inline-block;
  font-size: 3.4em;
  text-transform: uppercase;
  font-weight: 300;
  letter-spacing: 2px;
}

.header__heading-cursor {
  transform: translateY(-4px);
  font-size: 2.5em;
  display: inline-block;
  background-color: #ccc;
  margin-left: 0.1rem;
  width: 3px;
  animation: blink 1s infinite;
  opacity: 0;
}

.header__heading-cursor.typing {
  animation: none;
}

.header__link {
  color: #fff;
  display: block;
  padding: .75em 1.5em;
  background-color: #d44545;
  border-radius: 3px;
  pointer-events: none;
}

@keyframes blink {
  0% {
    background-color: #ccc;
  }
  49% {
    background-color: #ccc;
  }
  50% {
    background-color: transparent;
  }
  99% {
    background-color: transparent;
  }
  100% {
    background-color: #ccc;
  }
}

.wrap {
  z-index: 600;
}

.verysoon a {
  color: #fff;
  text-decoration: underline;
  transition: all 300ms ease-out;
}

.verysoon a:hover {
  color: #ccc;
}

.nav {
  padding: 1em 2em;
  background-color: black;
  transition: all 550ms ease-out;
  overflow: hidden;
}

.nav__list {
  display: flex;
  justify-content: space-around;
  align-items: center;
  transition: all 550ms ease-out;
}

.nav__item:not(.nav__item-logo) {
  transition: all 550ms ease-out;
  opacity: 0;
  transform: translateY(-100px);
}

.nav__item:not(:first-of-type) {
  margin-left: 1.5em;
}

.nav__item-logo img {
  width: 4em;
  height: 4em;
  border-radius: 50%;
  opacity: 0;
  transform: scale(10);
  visibility: hidden;
  transition: all 550ms ease-out 1200ms;
}

.nav__link {
  color: #fff;
}

.nav.sticky {
  z-index: 500;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  width: 100%;
  background-color: rgba(0, 0, 0, 0.7);
}

.nav.sticky .nav__item:not(.nav__item-logo) {
  opacity: 1;
  transform: translateY(0);
}

.nav.sticky .nav__item:nth-of-type(2) {
  transition-delay: 100ms;
}

.nav.sticky .nav__item:nth-of-type(3) {
  transition-delay: 200ms;
}

.nav.sticky .nav__item:nth-of-type(5) {
  transition-delay: 300ms;
}

.nav.sticky .nav__item:nth-of-type(6) {
  transition-delay: 400ms;
}

.nav.sticky .nav__item:nth-of-type(7) {
  transition-delay: 500ms;
}

.nav.sticky .nav__item-logo img {
  width: 4em;
  height: 4em;
  border-radius: 50%;
  opacity: 1;
  visibility: visible;
  transform: scale(1);
}

.intro {
  padding: 14em 2em 2em;
  max-width: 1280px;
  margin: 6em auto;
  /* IE does not support align-items on grid containers. Use align-self on child elements instead */
}

.intro__wrap {
  display: -ms-grid;
  display: grid;
  -ms-grid-columns: 1fr 1fr;
  grid-template-columns: 1fr 1fr;
}

.intro__wrap > * {
  -ms-grid-row-align: center;
      align-self: center;
}

.intro__paragraph-wrap {
  overflow: hidden;
}

.intro__paragraph-wrap:not(:last-of-type) {
  margin-bottom: 2.75em;
}

.intro__paragraph {
  font-size: 1.3em;
  position: relative;
  line-height: 1.4;
  transform: translateY(100%);
  /*&::after {
            content: "";
            position: absolute;
            background-color: red;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: 1;
            transform-origin: 100% 0;
        }*/
}

.intro__image-wrap {
  position: relative;
  overflow: hidden;
  transform: translateX(-50px);
}

.intro__image-wrap::before {
  content: "";
  background-color: #000;
  position: absolute;
  top: 0;
  left: -100%;
  right: 100%;
  bottom: 0;
  z-index: 50;
}

.intro__image {
  max-width: 100%;
  height: auto;
  display: block;
  opacity: 0;
  visibility: hidden;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
